name: release binary

on:
  push:
    # tags:
    #   - v*.*.*
    branches:
      - master


jobs:
  build-client:
    name: Build-Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: yarn install, and build
        run: |
          cd client
          yarn install
          yarn build:stage 
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: client
          path: client/dist

  build-server:
    name: Build-server
    runs-on: ubuntu-latest
    needs: build-client
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Download Client artifact
      uses: actions/download-artifact@v1
      with:
        name: client
        path: client/dist
    - name: Get dependencies
      env:
        GO111MODULE: on
        GOPATH: /home/runner/work/
      run: |
        go get github.com/rakyll/statik
        cd server
        $GOPATH/bin/statik --src ../client/dist
    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: server
        path: server
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Get url to upload to release from output
      env:
        url: ${{ steps.create_release.outputs.upload_url }}
      run: |
        mkdir artifact
        echo $url > artifact/url.txt
    - name: Upload artifact to share url with other jobs
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: artifact/url.txt
  
  release:
    needs: build-server
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - name: Download Client artifact
        uses: actions/download-artifact@v1
        with:
          name: server
          path: server
      - name: build server
        env:
          CGO_ENABLED: 1
        run: |
          cd server
          go build
          tar zcvf ../reverse-proxy-${{ matrix.os }}.tar.gz main

      - name: Download artifact to get url to upload to release
        uses: actions/download-artifact@v1
        with:
          name: artifact

      - name: Get url to upload to release from artifact
        id: get_url
        run: |
          url=$(cat artifact/url.txt)
          echo "##[set-output name=upload_url;]$url"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_url.outputs.upload_url }}
          asset_path: ./reverse-proxy-${{ matrix.os }}.tar.gz
          asset_name: reverse-proxy-${{ matrix.os }}.tar.gz
          asset_content_type: application/zip

      # - name: Upload to release
      #   uses: JasonEtco/upload-to-release@master
      #   with:
      #     args: reverse-proxy-${{ matrix.os }}.tar.gz
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

